@using IMS.ViewModels
@model CreateUserViewModel
@{
    ViewData["Title"] = "Create User";
}

<div class="container mt-4">
    <div class="card shadow-sm animate__animated animate__fadeIn">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0"><i class="bi bi-person-plus me-2"></i> Create New User</h5>
            <a asp-controller="Admin" asp-action="ManagePermissions" class="btn btn-light btn-sm">
                <i class="bi bi-arrow-left"></i> Back
            </a>
        </div>

        <div class="card-body">
            <form asp-action="Create" method="post" id="createUserForm" novalidate>
                <div class="row g-3">
                    <!-- Username -->
                    <div class="col-md-6 col-12">
                        <label asp-for="UserName" class="form-label fw-semibold">Username</label>
                        <input asp-for="UserName" class="form-control" placeholder="Enter username" />
                        <span asp-validation-for="UserName" class="text-danger small"></span>
                    </div>

                    <!-- Password -->
                    <div class="col-md-6 col-12">
                        <label asp-for="Password" class="form-label fw-semibold">Password</label>
                        <div class="input-group">
                            <input asp-for="Password" type="password" class="form-control" id="passwordField" placeholder="Enter password" />
                            <button type="button" class="btn btn-outline-secondary" id="togglePassword" tabindex="-1">
                                <i class="bi bi-eye"></i>
                            </button>
                        </div>
                        <div class="progress mt-2" style="height: 6px;">
                            <div id="passwordStrengthBar" class="progress-bar" style="width: 0%;"></div>
                        </div>
                        <small id="passwordStrengthText" class="text-muted"></small>
                        <span asp-validation-for="Password" class="text-danger small"></span>
                    </div>

                    <!-- Confirm Password -->
                    <div class="col-md-6 col-12">
                        <label class="form-label fw-semibold">Confirm Password</label>
                        <div class="input-group">
                            <input type="password" id="confirmPassword" name="ConfirmPassword" class="form-control" placeholder="Re-enter password" />
                            <button type="button" class="btn btn-outline-secondary" id="toggleConfirmPassword" tabindex="-1">
                                <i class="bi bi-eye"></i>
                            </button>
                        </div>
                        <span id="confirmPasswordError" class="text-danger small"></span>
                    </div>

                    <!-- Email -->
                    <div class="col-md-6 col-12">
                        <label asp-for="Email" class="form-label fw-semibold">Email</label>
                        <input asp-for="Email" type="email" class="form-control" placeholder="Enter email" />
                        <span asp-validation-for="Email" class="text-danger small"></span>
                    </div>

                    <!-- Mobile -->
                    <div class="col-md-6 col-12">
                        <label asp-for="MobileNumber" class="form-label fw-semibold">Mobile Number</label>
                        <input asp-for="MobileNumber" type="text" inputmode="numeric" maxlength="10"
                               oninput="this.value = this.value.replace(/[^0-9]/g, '')"
                               class="form-control" placeholder="Enter 10-digit mobile number" />
                        <span asp-validation-for="MobileNumber" class="text-danger small"></span>
                    </div>

                    <!-- Full Name -->
                    <div class="col-md-6 col-12">
                        <label asp-for="FullName" class="form-label fw-semibold">Full Name</label>
                        <input asp-for="FullName" class="form-control" placeholder="Enter full name (optional)" />
                        <span asp-validation-for="FullName" class="text-danger small"></span>
                    </div>

                    <!-- Role -->
                    <div class="col-md-6 col-12">
                        <label asp-for="SelectedRoleId" class="form-label fw-semibold">Role</label>
                        <select asp-for="SelectedRoleId" asp-items="Model.Roles" class="form-select">
                            <option value="">-- Select Role --</option>
                        </select>
                        <span asp-validation-for="SelectedRoleId" class="text-danger small"></span>
                    </div>

                    <!-- Branch -->
                    <div class="col-md-6 col-12">
                        <label asp-for="SelectedBranch" class="form-label fw-semibold">Branch</label>
                        <select asp-for="SelectedBranch" asp-items="Model.Branches" class="form-select">
                            <option value="">-- Select Branch --</option>
                        </select>
                        <span asp-validation-for="SelectedBranch" class="text-danger small"></span>
                    </div>

                </div>

                <div class="d-flex justify-content-end mt-4">
                    <button type="submit" class="btn btn-success px-4">
                        <i class="bi bi-save me-1"></i> Save User
                    </button>
                </div>
            </form>
        </div>
    </div>

    <div aria-live="polite" aria-atomic="true" class="position-relative">
        <div id="toastContainer" class="toast-container position-fixed top-0 end-0 p-3"></div>
    </div>

</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(document).ready(function () {
            // Password show/hide toggle
            $('#togglePassword').on('click', function () {
                const input = $('#passwordField');
                const icon = $(this).find('i');
                const type = input.attr('type') === 'password' ? 'text' : 'password';
                input.attr('type', type);
                icon.toggleClass('bi-eye bi-eye-slash');
            });

            $('#toggleConfirmPassword').on('click', function () {
                const input = $('#confirmPassword');
                const icon = $(this).find('i');
                const type = input.attr('type') === 'password' ? 'text' : 'password';
                input.attr('type', type);
                icon.toggleClass('bi-eye bi-eye-slash');
            });

            // Confirm password validation
            $('#confirmPassword').on('input', function () {
                const password = $('#passwordField').val();
                const confirmPassword = $(this).val();

                if (confirmPassword && confirmPassword !== password) {
                    $('#confirmPasswordError').text('Passwords do not match');
                } else {
                    $('#confirmPasswordError').text('');
                }
            });

            // Password strength check
            $('#passwordField').on('input', function () {
                const password = $(this).val();
                const strengthBar = $('#passwordStrengthBar');
                const strengthText = $('#passwordStrengthText');
                let strength = 0;

                if (password.length >= 8) strength++;
                if (/[A-Z]/.test(password)) strength++;
                if (/[0-9]/.test(password)) strength++;
                if (/[^A-Za-z0-9]/.test(password)) strength++;

                switch (strength) {
                    case 0:
                        strengthBar.css('width', '0%').removeClass().addClass('progress-bar');
                        strengthText.text('');
                        break;
                    case 1:
                        strengthBar.css('width', '25%').removeClass().addClass('progress-bar bg-danger');
                        strengthText.text('Weak');
                        break;
                    case 2:
                        strengthBar.css('width', '50%').removeClass().addClass('progress-bar bg-warning');
                        strengthText.text('Fair');
                        break;
                    case 3:
                        strengthBar.css('width', '75%').removeClass().addClass('progress-bar bg-info');
                        strengthText.text('Good');
                        break;
                    case 4:
                        strengthBar.css('width', '100%').removeClass().addClass('progress-bar bg-success');
                        strengthText.text('Strong');
                        break;
                }
            });

            const successMessage = '@TempData["Success"]';
        if (successMessage) {
            const toastHtml = `
                <div class="toast align-items-center text-white bg-success border-0 mb-2" role="alert" aria-live="assertive" aria-atomic="true">
                    <div class="d-flex">
                        <div class="toast-body">
                            ${successMessage}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            `;
            $('#toastContainer').append(toastHtml);
            const toastEl = $('#toastContainer .toast').last()[0];
            const bsToast = new bootstrap.Toast(toastEl, { delay: 3000 });
            bsToast.show();
        }
        });
    </script>

    <style>
        .input-group .btn-outline-secondary {
            border-color: #ced4da;
        }

            .input-group .btn-outline-secondary:hover {
                background-color: #f8f9fa;
            }

        .progress {
            border-radius: 0.25rem;
            background-color: #e9ecef;
        }
    </style>
}
