@model IEnumerable<IMS.ViewModels.DeliveryChallanViewModel>

<div class="container-fluid mt-3">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center gap-3 p-3 bg-light rounded-3 shadow-sm">
                <div>
                    <h2 class="mb-1 text-primary"><i class="bi bi-truck me-2"></i>Delivery Challans</h2>
                    <p class="text-muted mb-0">Manage and track all delivery documentation</p>
                </div>
                
                <a asp-controller="DeliveryChallan" asp-action="Create" class="btn btn-primary btn-lg shadow-sm">
                    <i class="bi bi-plus-circle me-1"></i> Create Challan
                </a>
            </div>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body">
                    <form method="get" asp-action="Index" id="searchForm">
                        <div class="row g-3 align-items-end">
                            <div class="col-md-8">
                                <label class="form-label fw-semibold">Search Challans</label>
                                <div class="input-group input-group-lg">
                                    <span class="input-group-text bg-transparent border-end-0">
                                        <i class="bi bi-search text-muted"></i>
                                    </span>
                                    <input type="text" name="searchTerm" value="@ViewBag.SearchTerm"
                                           id="searchInput"
                                           class="form-control border-start-0"
                                           placeholder="Search by Challan No, Receiver Name, or Phone Number..." />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <label class="form-label fw-semibold">Items per page</label>
                                <select name="pageSize" class="form-select" onchange="this.form.submit()">
                                    <option value="10" selected="@(ViewBag.PageSize == 10)">10</option>
                                    <option value="25" selected="@(ViewBag.PageSize == 25)">25</option>
                                    <option value="50" selected="@(ViewBag.PageSize == 50)">50</option>
                                    <option value="100" selected="@(ViewBag.PageSize == 100)">100</option>
                                </select>
                                <input type="hidden" name="searchTerm" value="@ViewBag.SearchTerm" />
                            </div>
                            <div class="col-md-2">
                                <button type="submit" class="btn btn-outline-primary w-100">
                                    <i class="bi bi-filter me-1"></i> Apply
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Table Section -->
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover align-middle mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th class="ps-4">#</th>
                                    <th>Challan No</th>
                                    <th>Date</th>
                                    <th>Receiver</th>
                                    <th>Phone</th>
                                    <th class="text-end pe-4">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null && Model.Any())
                                {
                                    @foreach (var challan in Model)
                                    {
                                        <tr class="border-bottom">
                                            <td class="ps-4 fw-semibold">@challan.Id</td>
                                            <td>
                                                <span class="fw-semibold text-primary">@challan.ChallanNumber</span>
                                            </td>
                                            <td>
                                                <span class="badge bg-light text-dark">
                                                    <i class="bi bi-calendar me-1"></i>@challan.Date.ToString("dd-MM-yyyy")
                                                </span>
                                            </td>
                                            <td>@challan.ReceiverName</td>
                                            <td>
                                                <a href="tel:@challan.ReceiverPhone" class="text-decoration-none">
                                                    <i class="bi bi-telephone me-1"></i>@challan.ReceiverPhone
                                                </a>
                                            </td>
                                            <td class="text-end pe-4">
                                                <div class="d-flex justify-content-end gap-2">
                                                    <a asp-action="Details" asp-route-id="@challan.Id" 
                                                       class="btn btn-sm btn-outline-primary d-flex align-items-center">
                                                        <i class="bi bi-eye me-1"></i> Details
                                                    </a>
                                                    <a asp-action="Edit" asp-route-id="@challan.Id" 
                                                       class="btn btn-sm btn-outline-secondary d-flex align-items-center">
                                                        <i class="bi bi-pencil me-1"></i> Edit
                                                    </a>
                                                    <button type="button" class="btn btn-sm btn-outline-danger d-flex align-items-center"
                                                            data-bs-toggle="modal"
                                                            data-bs-target="#deleteModal"
                                                            data-id="@challan.Id"
                                                            data-name="@challan.ChallanNumber">
                                                        <i class="bi bi-trash me-1"></i> Delete
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="6" class="text-center py-5">
                                            <div class="py-5">
                                                <i class="bi bi-inbox display-4 text-muted"></i>
                                                <h5 class="text-muted mt-3">No challans found</h5>
                                                <p class="text-muted">Get started by creating a new delivery challan</p>
                                                <a asp-action="Create" class="btn btn-primary mt-2">
                                                    <i class="bi bi-plus-circle me-1"></i> Create Challan
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Pagination Section -->
    @if (ViewBag.TotalItems > 0)
    {
        <div class="row mt-4">
            <div class="col-12">
                <div class="d-flex flex-column flex-md-row justify-content-between align-items-center gap-3">
                    <div class="text-muted small">
                        Showing <strong>@ViewBag.StartRecord</strong> to <strong>@ViewBag.EndRecord</strong> of <strong>@ViewBag.TotalItems</strong> records
                    </div>

                    <nav aria-label="Page navigation">
                        <ul class="pagination pagination-sm mb-0 flex-wrap justify-content-center">
                            <li class="page-item @(ViewBag.Page == 1 ? "disabled" : "")">
                                <a class="page-link"
                                   asp-action="Index"
                                   asp-route-page="@(ViewBag.Page - 1)"
                                   asp-route-pageSize="@ViewBag.PageSize"
                                   asp-route-searchTerm="@ViewBag.SearchTerm">
                                    <i class="bi bi-chevron-left"></i>
                                </a>
                            </li>

                            @{
                                int startPage = Math.Max(1, ViewBag.Page - 2);
                                int endPage = Math.Min(ViewBag.TotalPages, startPage + 4);
                                startPage = Math.Max(1, endPage - 4);
                            }

                            @for (int i = startPage; i <= endPage; i++)
                            {
                                <li class="page-item @(ViewBag.Page == i ? "active" : "")">
                                    <a class="page-link"
                                       asp-action="Index"
                                       asp-route-page="@i"
                                       asp-route-pageSize="@ViewBag.PageSize"
                                       asp-route-searchTerm="@ViewBag.SearchTerm">@i</a>
                                </li>
                            }

                            <li class="page-item @(ViewBag.Page == ViewBag.TotalPages ? "disabled" : "")">
                                <a class="page-link"
                                   asp-action="Index"
                                   asp-route-page="@(ViewBag.Page + 1)"
                                   asp-route-pageSize="@ViewBag.PageSize"
                                   asp-route-searchTerm="@ViewBag.SearchTerm">
                                    <i class="bi bi-chevron-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    }
</div>

<!-- Success Modal -->
<!-- Success Modal -->
<div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="successModalLabel">
                    <i class="bi bi-check-circle-fill me-2"></i> Success
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center py-4">
                <i class="bi bi-check-circle text-success" style="font-size: 3rem;"></i>
                <p class="fs-5 mt-3" id="modalMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-bs-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-3 shadow">
            <form method="post" asp-action="DeleteConfirmed">
                @Html.AntiForgeryToken()
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">
                        <i class="bi bi-exclamation-triangle-fill me-2"></i> Confirm Delete
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-center py-4">
                    <input type="hidden" name="id" id="deleteId" />
                    <i class="bi bi-trash text-danger" style="font-size: 3rem;"></i>
                    <p class="fs-5 mt-3">
                        Are you sure you want to delete<br />
                        <strong id="deleteName" class="text-danger"></strong>?
                    </p>
                    <p class="text-muted">This action cannot be undone.</p>
                </div>
                <div class="modal-footer justify-content-center">
                    <button type="button" class="btn btn-outline-secondary px-4" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger px-4">
                        <i class="bi bi-trash-fill me-1"></i> Delete
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Delete modal functionality
        var deleteModal = document.getElementById('deleteModal');
        if (deleteModal) {
            deleteModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var id = button.getAttribute('data-id');
                var name = button.getAttribute('data-name');
                document.getElementById('deleteId').value = id;
                document.getElementById('deleteName').textContent = name;
            });
        }
        
        // Auto-show success modal if there's a success message
        document.addEventListener('DOMContentLoaded', function () {
            // Auto-show success modal if there's a success message
            var successMessage = '@TempData["SuccessMessage"]';
            console.log('Success message:', successMessage); // Debug

            if (successMessage && successMessage !== '') {
                $('#modalMessage').text(successMessage);
                var myModal = new bootstrap.Modal(document.getElementById('successModal'));
                myModal.show();
            }
        });
        
        // Enhanced search with debounce
        const searchInput = document.getElementById('searchInput');
        const searchForm = document.getElementById('searchForm');
        
        if (searchInput && searchForm) {
            let typingTimer;
            const typingDelay = 500;
            
            searchInput.addEventListener('keyup', function() {
                clearTimeout(typingTimer);
                typingTimer = setTimeout(() => {
                    searchForm.submit();
                }, typingDelay);
            });
            
            searchInput.addEventListener('keydown', function() {
                clearTimeout(typingTimer);
            });
        }
        
        // Responsive table adjustments
        function adjustTableForMobile() {
            const table = document.querySelector('table');
            if (!table) return;
            
            if (window.innerWidth < 768) {
                // Add data labels for mobile view
                const headers = Array.from(table.querySelectorAll('thead th')).map(th => th.textContent.trim());
                const rows = table.querySelectorAll('tbody tr');
                
                rows.forEach(row => {
                    const cells = row.querySelectorAll('td');
                    cells.forEach((cell, index) => {
                        if (index < headers.length - 1) { // Skip actions column
                            cell.setAttribute('data-label', headers[index]);
                        }
                    });
                    
                    // Adjust action buttons for mobile
                    const actionCell = row.querySelector('td:last-child');
                    if (actionCell) {
                        actionCell.classList.add('action-buttons-mobile');
                    }
                });
            }
        }
        
        // Run on load and resize
        adjustTableForMobile();
        window.addEventListener('resize', adjustTableForMobile);
    });
</script>

<style>
    /* Custom styles for enhanced appearance */
    .card {
        border-radius: 0.75rem;
        overflow: hidden;
    }
    
    .table th {
        border-top: none;
        font-weight: 600;
        text-transform: uppercase;
        font-size: 0.85rem;
        letter-spacing: 0.5px;
        color: #6c757d;
    }
    
    .table td {
        border-color: #f1f3f7;
        padding: 1rem 0.75rem;
    }
    
    .table tr:last-child {
        border-bottom: none;
    }
    
    .btn {
        border-radius: 0.5rem;
        transition: all 0.2s;
    }
    
    .btn:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    
    
    /* Animation for table rows */
    .table-hover tbody tr {
        transition: all 0.2s;
    }
    
    .table-hover tbody tr:hover {
        background-color: rgba(67, 97, 238, 0.05);
        transform: translateX(4px);
    }
</style>